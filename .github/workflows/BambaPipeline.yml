name: Bamba Pipeline

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - instance: instance_4
            ip: 62.84.183.71
            port: 8084
            service: nbc_4
            deploy_path: /opt/NbcUSSD/instance_4/

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install expect
        run: sudo apt-get update && sudo apt-get install -y expect

      - name: Deploy and Restart Spring Boot Application on ${{ matrix.instance }}
        run: |
          expect <<EOF
          spawn ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USERNAME }}@${{ matrix.ip }}
          expect "password:"
          send "${{ secrets.SSH_PASSWORD }}\r"
          expect "$ "

          send "echo 'Stopping service: ${{ matrix.service }}'\r"
          send "sudo systemctl stop ${{ matrix.service }}\r"
          expect "$ "

          send "echo 'Pulling latest code...'\r"
          send "cd /opt/BambaRepo || exit 1\r"
          send "git reset --hard\r"
          send "git pull origin main || exit 1\r"
          expect "$ "

          send "echo 'Updating server.port in application.properties...'\r"
          send "sed -i 's/^server\\.port=.*/server.port=${{ matrix.port }}/' src/main/resources/application.properties\r"
          expect "$ "

          send "echo 'Building application...'\r"
          send "./mvnw clean package -DskipTests || exit 1\r"
          expect "$ "

          send "echo 'Removing old JAR file (if exists)...'\r"
          send "rm -f ${{ matrix.deploy_path }}/mobiAd-0.0.1-SNAPSHOT.jar || exit 1\r"
          expect "$ "

          send "echo 'Copying new JAR file to ${{ matrix.deploy_path }}...'\r"
          send "cp target/mobiAd-0.0.1-SNAPSHOT.jar ${{ matrix.deploy_path }} || exit 1\r"
          expect "$ "

          send "echo 'Restarting service ${{ matrix.service }} with port ${{ matrix.port }}...'\r"
          send "sudo systemctl restart ${{ matrix.service }} || exit 1\r"
          expect "$ "

          send "exit\r"
          expect eof
          EOF
